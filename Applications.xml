<Applications>
	<NotePadPlusPlus>
		<Vendor>NotepadPlusPlus Team</Vendor>
		<Product>NotepadPlusPlus</Product>
		<Architecture>x64</Architecture>
		<Evergreen>Get-NotepadPlusPlus | Where-Object { $_.Architecture -eq "$Architecture" -and $_.URI -like "*.exe" }</Evergreen>
		<DisplayName>NotepadPlusPlus</DisplayName>
		<Description>NotepadPlusPlus {VERSION}</Description>
		<Installer>exe</Installer>
		<Install>/S</Install>
		<Uninstall>uninstall.exe</Uninstall>
		<Path>C:\Program Files\NotepadPlusPlus</Path>
		<Enabled>True</Enabled>
		<Categories>IT Admin Tools</Categories>
		<Assignments Customer="xenappblog">
			<Group>All Users</Group>
			<RequiredGroup>All Devices</RequiredGroup>
			<PilotGroup>Intune IT Pilot</PilotGroup>
		</Assignments>
	</NotePadPlusPlus>
	<ShareX>
		<Vendor>ShareX Team</Vendor>
		<Product>ShareX</Product>
		<Architecture>x86</Architecture>
		<Evergreen>Get-ShareX | Where-Object { $_.Architecture -eq "$Architecture" -and $_.URI -like "*.exe" }</Evergreen>
		<DisplayName>ShareX</DisplayName>
		<Description>ShareX {VERSION}</Description>
		<Installer>exe</Installer>
		<Install>/Verysilent /Norun</Install>
		<Uninstall>unins000.exe</Uninstall>
		<Path>C:\Program Files\ShareX</Path>
		<Enabled>True</Enabled>
		<Categories>IT Admin Tools</Categories>
		<Assignments Customer="xenappblog">
			<Group>All Users</Group>
			<RequiredGroup>All Devices</RequiredGroup>
			<PilotGroup>Intune IT Pilot</PilotGroup>
		</Assignments>
	</ShareX>
	<mRemoteNG>
		<Vendor>Next Generation Software</Vendor>
		<Product>mRemoteNG</Product>
		<Architecture>x86</Architecture>
		<Evergreen>Get-mRemoteNG | Where-Object { $_.Architecture -eq "$Architecture" -and $_.URI -like "*.msi" }</Evergreen>
		<DisplayName>mRemoteNG</DisplayName>
		<Description>mRemoteNG {VERSION}</Description>
		<Installer>msi</Installer>
		<Install>/i ALLUSERS=1 /qn</Install>
		<Uninstall>/x</Uninstall>
		<Path>C:\Program Files (x86)\mRemoteNG</Path>
		<Enabled>True</Enabled>
		<Categories>IT Admin Tools</Categories>
		<Assignments Customer="xenappblog">
			<Group>All Users</Group>
			<RequiredGroup>All Devices</RequiredGroup>
			<PilotGroup>Intune IT Pilot</PilotGroup>
		</Assignments>
	</mRemoteNG>
	<WinSCP>
		<Vendor>Martin Prikyl</Vendor>
		<Product>WinSCP</Product>
		<Architecture>x86</Architecture>
		<Evergreen>Get-WinSCP | Where-Object { $_.Architecture -eq "$Architecture" -and $_.URI -like "*.exe" }</Evergreen>
		<DisplayName>WinSCP</DisplayName>
		<Description>WinSCP {VERSION}</Description>
		<Installer>exe</Installer>
		<Install>/VERYSILENT /SUPPRESSMSGBOXES /NORESTART /SP-</Install>
		<Uninstall>unins000.exe</Uninstall>
		<Path>C:\Program Files (x86)\WinSCP</Path>
		<Enabled>True</Enabled>
		<Categories>IT Admin Tools</Categories>
		<Assignments Customer="xenappblog">
			<Group>All Users</Group>
			<RequiredGroup>All Devices</RequiredGroup>
			<PilotGroup>Intune IT Pilot</PilotGroup>
		</Assignments>
	</WinSCP>
	<FileZilla>
		<Vendor>Tim Kosse</Vendor>
		<Product>FileZilla</Product>
		<Architecture>x86</Architecture>
		<Evergreen>Get-FileZilla</Evergreen>
		<DisplayName>FileZilla FTP Client</DisplayName>
		<Description>FileZilla FTP Client {VERSION}</Description>
		<Installer>exe</Installer>
		<Install>/S</Install>
		<Uninstall>uninstall.exe</Uninstall>
		<Path>C:\Program Files\FileZilla FTP Client</Path>
		<Enabled>True</Enabled>
		<Categories>IT Admin Tools</Categories>
		<Assignments Customer="xenappblog">
			<Group>All Users</Group>
			<RequiredGroup>All Devices</RequiredGroup>
			<PilotGroup>Intune IT Pilot</PilotGroup>
		</Assignments>
	</FileZilla>
	<SevenZip>
		<Vendor>7Zip</Vendor>
		<Product>7Zip</Product>
		<Architecture>x64</Architecture>
		<Evergreen>Get-7zip | Where-Object { $_.Architecture -eq "$Architecture" -and $_.URI -like "*.msi" }</Evergreen>
		<DisplayName>7-Zip</DisplayName>
		<Description>7-Zip {VERSION}</Description>
		<Installer>msi</Installer>
		<Install>/i ALLUSERS=1 /qn</Install>
		<Uninstall>/x</Uninstall>
		<Path>C:\Program Files\7-Zip</Path>
		<Enabled>True</Enabled>
		<Categories>IT Admin Tools</Categories>
		<Assignments Customer="xenappblog">
			<Group>All Users</Group>
			<RequiredGroup>All Devices</RequiredGroup>
			<PilotGroup>Intune IT Pilot</PilotGroup>
		</Assignments>
	</SevenZip>
	<TeamViewer>
		<Vendor>TeamViewer</Vendor>
		<Product>TeamViewer</Product>
		<Architecture>x64</Architecture>
		<Evergreen>Get-TeamViewer</Evergreen>
		<DisplayName>TeamViewer</DisplayName>
		<Description>TeamViewer {VERSION}</Description>
		<Installer>exe</Installer>
		<Install>/S</Install>
		<Uninstall>uninstall.exe</Uninstall>
		<Path>C:\Program Files (x86)\TeamViewer</Path>
		<Enabled>True</Enabled>
		<Categories>IT Admin Tools</Categories>
		<Assignments Customer="xenappblog">
			<Group>All Users</Group>
			<RequiredGroup>All Devices</RequiredGroup>
			<PilotGroup>Intune IT Pilot</PilotGroup>
		</Assignments>
	</TeamViewer>
	<WinMerge>
		<Vendor>Thingamahoochie Software</Vendor>
		<Product>WinMerge</Product>
		<Architecture>x64</Architecture>
		<Evergreen>Get-WinMerge | Where-Object { $_.Architecture -eq "$Architecture" -and $_.URI -like "*x64-Setup.exe" }</Evergreen>
		<DisplayName>WinMerge</DisplayName>
		<Description>WinMerge {VERSION}</Description>
		<Installer>exe</Installer>
		<Install>/VERYSILENT /SP- /NORESTART</Install>
		<Uninstall>unins000.exe</Uninstall>
		<Path>C:\Program Files\WinMerge</Path>
		<Enabled>True</Enabled>
		<Categories>IT Admin Tools</Categories>
		<Assignments Customer="xenappblog">
			<Group>All Users</Group>
			<RequiredGroup>All Devices</RequiredGroup>
			<PilotGroup>Intune IT Pilot</PilotGroup>
		</Assignments>
	</WinMerge>
	<VideoLanVlcPlayer>
		<Vendor>VideoLAN</Vendor>
		<Product>VideoLanVlcPlayer</Product>
		<Architecture>x64</Architecture>
		<Evergreen>Get-VideoLanVlcPlayer | Where-Object { $_.Architecture -eq "$Architecture" -and $_.URI -like "*.msi" }</Evergreen>
		<DisplayName>VideoLAN</DisplayName>
		<Description>VideoLAN {VERSION}</Description>
		<Installer>msi</Installer>
		<Install>/i ALLUSERS=1 /qn</Install>
		<Uninstall>/x</Uninstall>
		<Path>C:\Program Files (x86)\TeamViewer</Path>
		<Enabled>True</Enabled>
		<Categories>IT Admin Tools</Categories>
		<Assignments Customer="xenappblog">
			<Group>All Users</Group>
			<RequiredGroup>All Devices</RequiredGroup>
			<PilotGroup>Intune IT Pilot</PilotGroup>
		</Assignments>
	</VideoLanVlcPlayer>
	<GreenShot>
		<Vendor>GreenShot</Vendor>
		<Product>GreenShot</Product>
		<Architecture>x86</Architecture>
		<Evergreen>Get-GreenShot | Where-Object { $_.Architecture -eq "$Architecture" -and $_.URI -like "*RELEASE.exe" }</Evergreen>
		<DisplayName>GreenShot</DisplayName>
		<Description>GreenShot {VERSION}</Description>
		<Installer>exe</Installer>
		<Install>/VERYSILENT /SUPPRESSMESSAGEBOXES /CLOSEAPPLICATIONS /RESTARTAPPLICATIONS /NORESTART</Install>
		<Uninstall>unins000.exe</Uninstall>
		<Path>C:\Program Files\Greenshot</Path>
		<Enabled>False</Enabled>
		<Categories>IT Admin Tools</Categories>
		<Assignments Customer="xenappblog">
			<Group>All Users</Group>
			<RequiredGroup>All Devices</RequiredGroup>
			<PilotGroup>Intune IT Pilot</PilotGroup>
		</Assignments>
	</GreenShot>
	<Cyberduck>
		<Vendor>iterate GmbH</Vendor>
		<Product>Cyberduck</Product>
		<Architecture>x86</Architecture>
		<Evergreen>Get-Cyberduck | Where-Object { $_.Channel -eq "Release" }</Evergreen>
		<DisplayName>Cyberduck</DisplayName>
		<Description>Cyberduck {VERSION}</Description>
		<Installer>exe</Installer>
		<Install>/quiet</Install>
		<Uninstall></Uninstall>
		<Path>C:\Program Files\Cyberduck</Path>
		<Enabled>False</Enabled>
		<Categories>IT Admin Tools</Categories>
		<Assignments Customer="xenappblog">
			<Group>All Users</Group>
			<RequiredGroup>All Devices</RequiredGroup>
			<PilotGroup>Intune IT Pilot</PilotGroup>
		</Assignments>
	</Cyberduck>
	<Handbrake>
		<Vendor>Handbrake</Vendor>
		<Product>Handbrake</Product>
		<Architecture>x64</Architecture>
		<Evergreen>Get-Handbrake | Where-Object { $_.Architecture -eq "$Architecture" -and $_.URI -like "*Win_GUI.exe" }</Evergreen>
		<DisplayName>Handbrake</DisplayName>
		<Description>Handbrake {VERSION}</Description>
		<Installer>exe</Installer>
		<Install>/S</Install>
		<Uninstall>uninst.exe</Uninstall>
		<Path>C:\Program Files\Handbrake</Path>
		<Enabled>True</Enabled>
		<Categories>IT Admin Tools</Categories>
		<Assignments Customer="xenappblog">
			<Group>All Users</Group>
			<RequiredGroup>All Devices</RequiredGroup>
			<PilotGroup>Intune IT Pilot</PilotGroup>
		</Assignments>
	</Handbrake>
	<TreeSizeFree>
		<Vendor>JAM Software</Vendor>
		<Product>TreeSizeFree</Product>
		<Architecture>x86</Architecture>
		<Evergreen>Get-JamTreeSizeFree</Evergreen>
		<DisplayName>TreeSize Free</DisplayName>
		<Description>TreeSize Free {VERSION}</Description>
		<Installer>exe</Installer>
		<Install>/verysilent</Install>
		<Uninstall>unins000.exe</Uninstall>
		<Path>C:\Program Files (x86)\JAM Software\TreeSize Free</Path>
		<Enabled>True</Enabled>
		<Categories>IT Admin Tools</Categories>
		<Assignments Customer="xenappblog">
			<Group>All Users</Group>
			<RequiredGroup>All Devices</RequiredGroup>
			<PilotGroup>Intune IT Pilot</PilotGroup>
		</Assignments>
	</TreeSizeFree>
	<MozillaFirefox>
		<Vendor>Mozilla</Vendor>
		<Product>MozillaFirefox</Product>
		<Architecture>x64</Architecture>
		<Evergreen>Get-MozillaFirefox | Where-Object { $_.Architecture -eq "$Architecture" -and $_.Type -eq "$InstallerType" -and $_.Channel -eq "LATEST_FIREFOX_VERSION" }</Evergreen>
		<DisplayName>Mozilla Firefox</DisplayName>
		<Description>Mozilla Firefox {VERSION}</Description>
		<Installer>msi</Installer>
		<Install>/i ALLUSERS=1 /qn</Install>
		<Uninstall>/X</Uninstall>
		<Path>C:\Program Files\Mozilla Firefox</Path>
		<Enabled>False</Enabled>
		<Categories>IT Admin Tools</Categories>
		<Assignments Customer="xenappblog">
			<Group>All Users</Group>
			<RequiredGroup>All Devices</RequiredGroup>
			<PilotGroup>Intune IT Pilot</PilotGroup>
		</Assignments>
	</MozillaFirefox>
	<CCleaner>
		<Vendor>Piriform</Vendor>
		<Product>CCleaner</Product>
		<Architecture>x86</Architecture>
		<Evergreen>choco install ccleaner</Evergreen>
		<DisplayName>CCleaner</DisplayName>
		<Description>CCleaner {VERSION}</Description>
		<Installer>exe</Installer>
		<Install>/S</Install>
		<Uninstall>uninst.exe</Uninstall>
		<Path>C:\Program Files\CCleaner</Path>
		<Enabled>True</Enabled>
		<Choco>True</Choco>
		<Categories>IT Admin Tools</Categories>
		<Assignments Customer="xenappblog">
			<Group>All Users</Group>
			<RequiredGroup>All Devices</RequiredGroup>
			<PilotGroup>Intune IT Pilot</PilotGroup>
		</Assignments>
	</CCleaner>
	<PaintNET>
		<Vendor>dotPDN LLC</Vendor>
		<Product>PaintNET</Product>
		<Architecture>x64</Architecture>
		<Evergreen>choco install paint.net</Evergreen>
		<DisplayName>Paint.NET</DisplayName>
		<Description>Paint.NET {VERSION}</Description>
		<Installer>exe</Installer>
		<Install>/S</Install>
		<Uninstall>/X</Uninstall>
		<Path>C:\Program Files\paint.net</Path>
		<Enabled>True</Enabled>
		<Choco>True</Choco>
		<Categories>IT Admin Tools</Categories>
		<Assignments Customer="xenappblog">
			<Group>All Users</Group>
			<RequiredGroup>All Devices</RequiredGroup>
			<PilotGroup>Intune IT Pilot</PilotGroup>
		</Assignments>
	</PaintNET>
	<Gimp>
		<Vendor>The Gimp Team</Vendor>
		<Product>Gimp</Product>
		<Architecture>x86</Architecture>
		<Evergreen>choco install Gimp</Evergreen>
		<DisplayName>Gimp</DisplayName>
		<Description>Gimp {VERSION}</Description>
		<Installer>MSI</Installer>
		<Install>/S</Install>
		<Uninstall>unins000.exe</Uninstall>
		<Path>C:\Program Files\GIMP 2</Path>
		<Enabled>True</Enabled>
		<Choco>True</Choco>
		<Categories>IT Admin Tools</Categories>
		<Assignments Customer="xenappblog">
			<Group>All Users</Group>
			<RequiredGroup>All Devices</RequiredGroup>
			<PilotGroup>Intune IT Pilot</PilotGroup>
		</Assignments>
	</Gimp>
	<MP3Tag>
		<Vendor>Florian Heidenreich</Vendor>
		<Product>MP3Tag</Product>
		<Architecture>x86</Architecture>
		<Evergreen>choco install MP3Tag</Evergreen>
		<DisplayName>MP3Tag</DisplayName>
		<Description>MP3Tag {VERSION}</Description>
		<Installer>exe</Installer>
		<Install>/S</Install>
		<Uninstall>Mp3tagUninstall.exe</Uninstall>
		<Path>C:\Program Files (x86)\Mp3tag</Path>
		<Enabled>True</Enabled>
		<Choco>True</Choco>
		<Categories>IT Admin Tools</Categories>
		<Assignments Customer="xenappblog">
			<Group>All Users</Group>
			<RequiredGroup>All Devices</RequiredGroup>
			<PilotGroup>Intune IT Pilot</PilotGroup>
		</Assignments>
	</MP3Tag>
	<Putty>
		<Vendor>Simon Tatham</Vendor>
		<Product>Putty</Product>
		<Architecture>x86</Architecture>
		<Evergreen>choco install putty.install</Evergreen>
		<DisplayName>Putty</DisplayName>
		<Description>Putty {VERSION}</Description>
		<Installer>exe</Installer>
		<Install>/S</Install>
		<Uninstall>uninstall.exe</Uninstall>
		<Path>C:\Program Files\Putty</Path>
		<Enabled>True</Enabled>
		<Choco>True</Choco>
		<Categories>IT Admin Tools</Categories>
		<Assignments Customer="xenappblog">
			<Group>All Users</Group>
			<RequiredGroup>All Devices</RequiredGroup>
			<PilotGroup>Intune IT Pilot</PilotGroup>
		</Assignments>
	</Putty>
	<PowerBI>
		<Vendor>Microsoft</Vendor>
		<Product>PowerBI</Product>
		<Architecture>x86</Architecture>
		<Evergreen>choco install PowerBI</Evergreen>
		<DisplayName>Power BI</DisplayName>
		<Description>Power BI {VERSION}</Description>
		<Installer>exe</Installer>
		<Install>/S</Install>
		<Uninstall>uninstall.exe</Uninstall>
		<Path>C:\Program Files\PowerBI</Path>
		<Enabled>False</Enabled>
		<Choco>True</Choco>
		<Categories>IT Admin Tools</Categories>
		<Assignments Customer="xenappblog">
			<Group>All Users</Group>
			<RequiredGroup>All Devices</RequiredGroup>
			<PilotGroup>Intune IT Pilot</PilotGroup>
		</Assignments>
	</PowerBI>
	<Wireshark>
		<Vendor>Wireshark Team</Vendor>
		<Product>Wireshark</Product>
		<Architecture>x86</Architecture>
		<Evergreen>choco install Wireshark</Evergreen>
		<DisplayName>Wireshark</DisplayName>
		<Description>Wireshark {VERSION}</Description>
		<Installer>exe</Installer>
		<Install>/S /quicklaunchicon=no</Install>
		<Uninstall>uninstall.exe</Uninstall>
		<Path>C:\Program Files\Wireshark</Path>
		<Enabled>True</Enabled>
		<Choco>True</Choco>
		<Categories>IT Admin Tools</Categories>
		<Assignments Customer="xenappblog">
			<Group>All Users</Group>
			<RequiredGroup>All Devices</RequiredGroup>
			<PilotGroup>Intune IT Pilot</PilotGroup>
		</Assignments>
	</Wireshark>
	<Fiddler>
		<Vendor>Progress Software Corporation</Vendor>
		<Product>Fiddler</Product>
		<Architecture>x86</Architecture>
		<Evergreen>choco install Fiddler --install-arguments /D=C:\Program Files\Fiddler</Evergreen>
		<DisplayName>Fiddler</DisplayName>
		<Description>Fiddler {VERSION}</Description>
		<Installer>exe</Installer>
		<Install>/S /D=C:\Program Files\Fiddler</Install>
		<Uninstall>uninstall.exe</Uninstall>
		<Path>C:\Program Files\Fiddler</Path>
		<Enabled>True</Enabled>
		<Choco>False</Choco>
		<Categories>IT Admin Tools</Categories>
		<Assignments Customer="xenappblog">
			<Group>All Users</Group>
			<RequiredGroup>All Devices</RequiredGroup>
			<PilotGroup>Intune IT Pilot</PilotGroup>
		</Assignments>
	</Fiddler>
</Applications>
